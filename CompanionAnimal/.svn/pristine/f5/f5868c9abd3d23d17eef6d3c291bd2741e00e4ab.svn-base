package com.owth.controller.Bbsmgt;

import java.io.Writer;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.ibatis.jdbc.SQL;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.kpu.jung.framework.exception.ServiceException;
import com.owth.service.bbs.BbsService;
import com.owth.vo.Bbsmgt.BbsVO;

 
/*
 * 
 * 게시판 컬럼 컨트롤러
 * 작성, 상세, 수정, 삭제
 * Write
 * Detail
 * Update
 * Delete
 */
@Controller
public class BbsController {
	
	private static final Logger logger = LoggerFactory.getLogger(BbsController.class);
	
	@Autowired
	BbsService service;
	
	//게시글 작성 action
	@RequestMapping("/write")
	public String getBbsInsert(RedirectAttributes rttr, ModelMap modelMap, Map<String,Object> map, @ModelAttribute BbsVO bbsVO, HttpServletRequest request, HttpServletResponse response, Writer out) throws Exception{
		
		System.out.println("bbsController Start =================================================");
		String flag="";	// flag : co: 컬럼, no: 공지, qa: Q&A
		
		if(request.getParameter("column") != null
				&& request.getParameter("notice") == null && request.getParameter("qna") == null) {
			flag = "co"; // co : column
			bbsVO.setFlag(flag);
			service.getBbsInsert(bbsVO, map, request);
			System.out.println("등록 성공");

			return "redirect:/board/column/columnList";
		}
		else if(request.getParameter("notice") != null
				&& request.getParameter("column") == null && request.getParameter("qna") == null){
			flag = "no"; // no : notice
			bbsVO.setFlag(flag);
			service.getBbsInsert(bbsVO, map, request);
			System.out.println("등록 성공");

			return "redirect:/board/notice/noticeList";
		}
		else if(request.getParameter("qna") != null 
				&& request.getParameter("column") == null && request.getParameter("notice") == null){
			flag = "qn"; // qn : qna
			bbsVO.setFlag(flag);
			service.getBbsInsert(bbsVO, map, request);
			System.out.println("등록 성공");

			return "redirect:/board/qna/qnaList";
		}
		return null;
	}
	
	//게시글 수정 action
	@RequestMapping("/update")
	public String getBbsUpdate(RedirectAttributes rttr ,ModelMap modelMap, @ModelAttribute BbsVO bbsVO, HttpServletRequest request, Writer out) throws ServiceException{

		System.out.println("==========================테스트=================================");
		System.out.println("title" + bbsVO.getBbsTitle());
		System.out.println("content" + bbsVO.getBbsContent());
		System.out.println("writer" + bbsVO.getWriter());
		
		try {
			
			if(request.getParameter("columnUpdate") != null
					&& request.getParameter("noticeUpdate") == null && request.getParameter("qnaUpdate") == null) {

				service.getBbsUpdate(bbsVO);
				System.out.println(" Column 수정 성공================");
				return "redirect:/board/column/columnList";
			}
			else if(request.getParameter("noticeUpdate") != null
					&& request.getParameter("columnUpdate") == null && request.getParameter("qnaUpdate") == null){
				
				service.getBbsUpdate(bbsVO);
				System.out.println(" Notice 수정 성공================");
				return "redirect:/board/notice/noticeList";
			}
			else if(request.getParameter("qnaUpdate") != null 
					&& request.getParameter("columnUpdate") == null && request.getParameter("noticeUpdate") == null){
				
				service.getBbsUpdate(bbsVO);
				System.out.println(" QnA 수정 성공================");
				return "redirect:/board/qna/qnaList";
			}

		} catch (Exception e) {
			if (logger.isErrorEnabled()) {
				logger.error(e.getMessage(), e);
			}
		}
		return null;

	}
	
	//게시글 삭제 action
	@RequestMapping("/delete")
	public String BbsDelete(RedirectAttributes rttr ,ModelMap modelMap, @ModelAttribute BbsVO bbsVO, HttpServletRequest request, Writer out) throws ServiceException{
		
		System.out.println("=================IDX" + bbsVO.getBbsIdx());
		System.out.println("================= :" + request.getParameter("columnDelete"));
			if(request.getParameter("columnDelete") != null
					&& request.getParameter("noticeDelete") == null && request.getParameter("qnaDelete") == null) {
	
				service.getBbsDelete(bbsVO);
				System.out.println(" Column 삭제 성공================");
				
				return "redirect:/board/column/columnList";
			}
			else if(request.getParameter("noticeDelete") != null
					&& request.getParameter("columnDelete") == null && request.getParameter("qnaDelete") == null){
				
				service.getBbsDelete(bbsVO);
				System.out.println(" Notice 삭제 성공================");
				
				return "redirect:/board/notice/noticeList";
			}
			else if(request.getParameter("qnaDelete") != null 
					&& request.getParameter("columnDelete") == null && request.getParameter("noticeDelete") == null){
				
				service.getBbsDelete(bbsVO);
				System.out.println(" QnA 삭제 성공================");
				
				return "redirect:/board/qna/qnaList";
			}

		return null;
	}
	
}
